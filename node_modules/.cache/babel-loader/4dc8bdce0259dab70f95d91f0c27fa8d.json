{"ast":null,"code":"var _jsxFileName = \"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n\n  const [partyTime, setPartyTime] = useState(false);\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const target = new Date(\"02/31/2022 12:00:00 PM UTC\");\n    const interval = setInterval(() => {\n      const now = new Date();\n      const difference = target.getTime() - now.getTime();\n      const d = Math.floor(difference / (1000 * 60 * 60 * 24));\n      setDays(d);\n      const h = Math.floor(difference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      setHours(h);\n      const m = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n      setMinutes(m);\n      const s = Math.floor(difference % (1000 * 60) / 1000);\n      setSeconds(s);\n\n      if (d <= 0 && h <= 0 && m <= 0 && s <= 0) {\n        setPartyTime(true);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !partyTime ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex   text-center justify-center text-2xl lg:text-3xl semibold\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold \",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [days, \" Days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"divider\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold \",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [hours, \" Hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"divider\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [minutes, \" Minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"divider\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [seconds, \" Seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim\",\n        children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"MqNveGO1Buh2BfMNEyudnwFNA+M=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Timer.jsx"],"names":["React","useState","useEffect","Timer","partyTime","setPartyTime","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","target","Date","interval","setInterval","now","difference","getTime","d","Math","floor","h","m","s","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Timer() {\n  const [partyTime, setPartyTime] = useState(false);\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const target = new Date(\"02/31/2022 12:00:00 PM UTC\");\n\n    const interval = setInterval(() => {\n      const now = new Date();\n      const difference = target.getTime() - now.getTime();\n\n      const d = Math.floor(difference / (1000 * 60 * 60 * 24));\n      setDays(d);\n\n      const h = Math.floor(\n        (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      setHours(h);\n\n      const m = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      setMinutes(m);\n\n      const s = Math.floor((difference % (1000 * 60)) / 1000);\n      setSeconds(s);\n\n      if (d <= 0 && h <= 0 && m <= 0 && s <= 0) {\n        setPartyTime(true);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      {!partyTime ? (\n        <>\n          <div className=\"mt-10\">\n            <div className=\"flex   text-center justify-center text-2xl lg:text-3xl semibold\">\n              <div className=\"font-semibold \">\n                <span className=\"time\">{days} Days</span>\n                {/* <span className=\"label\">Days</span> */}\n              </div>\n              <span className=\"divider\">:</span>\n              <div className=\"font-semibold \">\n                <span className=\"time\">{hours} Hours</span>\n                {/* <span className=\"label\">Hours</span> */}\n              </div>\n              <span className=\"divider\">:</span>\n              <div className=\"font-semibold\">\n                <span className=\"time\">{minutes} Minutes</span>\n                {/* <span className=\"label\">Minutes</span> */}\n              </div>\n              <span className=\"divider\">:</span>\n              <div className=\"font-semibold\">\n                <span className=\"time\">{seconds} Seconds</span>\n                {/* <span className=\"label\">Seconds</span> */}\n              </div>\n            </div>\n          </div>\n          <p className=\"claim\">\n            {days} : {hours} : {minutes} : {seconds}\n          </p>\n        </>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}