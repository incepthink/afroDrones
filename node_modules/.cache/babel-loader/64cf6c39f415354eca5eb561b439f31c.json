{"ast":null,"code":"var _jsxFileName = \"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Minting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport drone from \"../assests/001.gif\";\nimport { ethers } from \"ethers\";\nimport ABI from \"../Blockchain/ABI.json\";\nimport { useAlert } from \"react-alert\";\nimport loading from \"../assests/loading.gif\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nftaddress = \"0x5a37bC98D91049fE5fbdE9B7B9edAea719ce877A\";\n\nconst Minting = () => {\n  _s();\n\n  const alert = useAlert();\n  const [mintComplete, setMintComplete] = useState(false);\n  const [address, setaddress] = useState(null);\n  const [isloading, setIsloading] = useState(false);\n  const [status, setStatus] = useState(\"notlive\");\n  const [num, setNum] = useState(0);\n  const [claims, setClaims] = useState(0);\n  useEffect(() => {\n    setStatus(\"init\"); // const target = new Date(\"01/31/2022 5:47:00 PM UTC\");\n    // const interval = setInterval(() => {\n    //   let now = new Date();\n    //   // console.log(now < target);\n    //   if (now > target) {\n    //     setStatus(\"init\");\n    //     clearTimeout(interval);\n    //   }\n    // }, 1000);\n  }, []);\n  useEffect(() => {\n    if (address != null) findClaims();\n  }, [address]);\n  useEffect(() => {\n    window.ethereum.on(\"accountsChanged\", connectWallet);\n  }, []);\n\n  const connectWallet = async () => {\n    console.log(\"CONNET WALLET\"); // window.ethereum.request\n\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log(\"No metamask\");\n      alert.error(\"Please use a browser with Metamask\");\n      return;\n    } //check chain id\n\n\n    const chainId = await window.ethereum.request({\n      method: \"eth_chainId\"\n    });\n\n    if (chainId !== \"0x1\") {\n      console.log(\"Wrogn Chain\");\n      alert.error(\"Please use Etherium Mainnet \");\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\"); // Prompt user for account connections\n\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      let address = await signer.getAddress();\n      console.log(\"ADDRESS\", address);\n      setaddress(address);\n      setStatus(\"connected\");\n    } catch (err) {\n      console.log(err);\n\n      if (err.message.includes(\"unknown account\")) {\n        alert.error(\"Please connect your Metamask Wallet!\");\n      } else alert.error(\"Sorry, An Error Occured!\"); //   setShowMintedModal(false);\n\n    }\n  };\n\n  const findClaims = async () => {\n    if (address == null) {\n      alert.error(\"Could not get address from metamas!\");\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(nftaddress, ABI, signer);\n      const claim = await contract.availableClaims(address);\n      setClaims(claim.toNumber());\n    } catch (err) {\n      console.log(\"error finding claims\", err);\n    }\n  };\n\n  const mint = async () => {\n    // window.ethereum.request\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log(\"No metamask\");\n      alert.error(\"Please use a browser with Metamask\");\n      return;\n    } //check chain id\n\n\n    const chainId = await window.ethereum.request({\n      method: \"eth_chainId\"\n    });\n\n    if (chainId !== \"0x1\") {\n      console.log(\"Wrogn Chain\");\n      alert.error(\"Please use Etherium Mainnet \");\n      return;\n    }\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // const provider = new ethers.providers.getDefaultProvider(\"inkeby\", {\n    //   infura: \"https://mainnet.infura.io/v3/44c345ec9cac43e3a461dbfffe965e5d\",\n    // });\n\n    setIsloading(true);\n\n    try {\n      // console.log(await signer.getAddress());\n      const signer = provider.getSigner(); // setaddress(await signer.getAddress());\n\n      let contract = new ethers.Contract(nftaddress, ABI, signer); // console.log(contract);\n      // let address = await signer.getAddress();\n      // // console.log(\"ADDRESS\", address);\n      // setaddress(address);\n\n      let transaction = await contract.claimToken(num);\n      await transaction.wait(); // console.log(transaction);\n      // console.log(monstersarray);\n\n      setIsloading(false);\n      alert.success(\"Minted Successfully!\");\n      findClaims();\n      setNum(0);\n    } catch (err) {\n      console.log(err);\n      setIsloading(false);\n\n      if (err.message.includes(\"unknown account\")) {\n        alert.error(\"Please connect your Metamask Wallet!\");\n      } else if (err.message.includes(\"Exceeds MAX_Supply\")) {\n        alert.error(\"Payment Failed,exeeded max supply!\");\n      } else if (err.message.includes(\"insufficient funds\")) {\n        alert.error(\"Payment Failed,Insufficient funds in your account!\");\n      } else if (err.message.includes(\"not on the White List\")) {\n        alert.error(\"Payment Failed,Your account is not on the Whitelist!\");\n      } else alert.error(\"Payment Failed, please try again!\"); //   setShowMintedModal(false);\n\n    }\n  };\n\n  const InitComponent = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drone-bt-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: drone,\n          alt: \"drone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim\",\n        children: \"CLAIM IS LIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        className: \"connect\",\n        children: \"CONNECT METAMASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const ClaimComponent = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drone-bt-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: drone,\n          alt: \"drone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim\",\n        children: [claims, \" CLAIMS LEFT IN YOUR WALLET\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        id: \"address-text\",\n        children: [\"Connected with \", address.slice(0, 5), \"...\", address.slice(-3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mint-num\",\n        children: [\"CLAIM : \", num, \" DRONES\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (num < claims) setNum(num + 1);\n          },\n          children: [\" \", \"+\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (num > 0) {\n              setNum(num - 1);\n            }\n          },\n          children: [\"-\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mint,\n        className: \"connect\",\n        children: \"MINT DRONES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const LoadingPopup = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mint-col\",\n    children: [isloading ? /*#__PURE__*/_jsxDEV(LoadingPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 20\n    }, this) : null, mintComplete ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim\",\n        style: {\n          color: \"#fff\"\n        },\n        children: \"YOU HAVE CLAIMED ALL YOUR DRONE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim\",\n        style: {\n          marginTop: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: \"https://opensea.io/collection/afrodroids-by-owo\",\n          children: [\"VIEW COLLECTION ON OPENSEA\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : status == \"notlive\" ? Timer() : status == \"init\" ? InitComponent() : status == \"connected\" ? ClaimComponent() : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minting, \"6xhqaBLety8zwNv//gV9hypkmHE=\", false, function () {\n  return [useAlert];\n});\n\n_c = Minting;\nexport default Minting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minting\");","map":{"version":3,"sources":["/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Minting.jsx"],"names":["React","useState","useEffect","drone","ethers","ABI","useAlert","loading","Timer","nftaddress","Minting","alert","mintComplete","setMintComplete","address","setaddress","isloading","setIsloading","status","setStatus","num","setNum","claims","setClaims","findClaims","window","ethereum","on","connectWallet","console","log","isMetaMask","error","chainId","request","method","provider","providers","Web3Provider","send","signer","getSigner","getAddress","err","message","includes","contract","Contract","claim","availableClaims","toNumber","mint","transaction","claimToken","wait","success","InitComponent","ClaimComponent","slice","LoadingPopup","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport drone from \"../assests/001.gif\";\nimport { ethers } from \"ethers\";\nimport ABI from \"../Blockchain/ABI.json\";\nimport { useAlert } from \"react-alert\";\nimport loading from \"../assests/loading.gif\";\nimport Timer from \"./Timer\";\n\nconst nftaddress = \"0x5a37bC98D91049fE5fbdE9B7B9edAea719ce877A\";\nconst Minting = () => {\n  const alert = useAlert();\n\n  const [mintComplete, setMintComplete] = useState(false);\n  const [address, setaddress] = useState(null);\n  const [isloading, setIsloading] = useState(false);\n  const [status, setStatus] = useState(\"notlive\");\n  const [num, setNum] = useState(0);\n  const [claims, setClaims] = useState(0);\n\n  useEffect(() => {\n    setStatus(\"init\");\n\n    // const target = new Date(\"01/31/2022 5:47:00 PM UTC\");\n    // const interval = setInterval(() => {\n    //   let now = new Date();\n    //   // console.log(now < target);\n    //   if (now > target) {\n    //     setStatus(\"init\");\n    //     clearTimeout(interval);\n    //   }\n    // }, 1000);\n  }, []);\n\n  useEffect(() => {\n    if (address != null) findClaims();\n  }, [address]);\n\n  useEffect(() => {\n    window.ethereum.on(\"accountsChanged\", connectWallet);\n  }, []);\n\n  const connectWallet = async () => {\n    console.log(\"CONNET WALLET\");\n    // window.ethereum.request\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log(\"No metamask\");\n      alert.error(\"Please use a browser with Metamask\");\n      return;\n    }\n    //check chain id\n    const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n    if (chainId !== \"0x1\") {\n      console.log(\"Wrogn Chain\");\n      alert.error(\"Please use Etherium Mainnet \");\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum,\n        \"any\"\n      );\n      // Prompt user for account connections\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n\n      let address = await signer.getAddress();\n      console.log(\"ADDRESS\", address);\n      setaddress(address);\n      setStatus(\"connected\");\n    } catch (err) {\n      console.log(err);\n      if (err.message.includes(\"unknown account\")) {\n        alert.error(\"Please connect your Metamask Wallet!\");\n      } else alert.error(\"Sorry, An Error Occured!\");\n      //   setShowMintedModal(false);\n    }\n  };\n\n  const findClaims = async () => {\n    if (address == null) {\n      alert.error(\"Could not get address from metamas!\");\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum,\n        \"any\"\n      );\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(nftaddress, ABI, signer);\n      const claim = await contract.availableClaims(address);\n      setClaims(claim.toNumber());\n    } catch (err) {\n      console.log(\"error finding claims\", err);\n    }\n  };\n\n  const mint = async () => {\n    // window.ethereum.request\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log(\"No metamask\");\n      alert.error(\"Please use a browser with Metamask\");\n      return;\n    }\n    //check chain id\n    const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n    if (chainId !== \"0x1\") {\n      console.log(\"Wrogn Chain\");\n      alert.error(\"Please use Etherium Mainnet \");\n      return;\n    }\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // const provider = new ethers.providers.getDefaultProvider(\"inkeby\", {\n    //   infura: \"https://mainnet.infura.io/v3/44c345ec9cac43e3a461dbfffe965e5d\",\n    // });\n    setIsloading(true);\n\n    try {\n      // console.log(await signer.getAddress());\n      const signer = provider.getSigner();\n      // setaddress(await signer.getAddress());\n\n      let contract = new ethers.Contract(nftaddress, ABI, signer);\n      // console.log(contract);\n      // let address = await signer.getAddress();\n      // // console.log(\"ADDRESS\", address);\n      // setaddress(address);\n\n      let transaction = await contract.claimToken(num);\n      await transaction.wait();\n      // console.log(transaction);\n\n      // console.log(monstersarray);\n      setIsloading(false);\n      alert.success(\"Minted Successfully!\");\n      findClaims();\n      setNum(0);\n    } catch (err) {\n      console.log(err);\n      setIsloading(false);\n      if (err.message.includes(\"unknown account\")) {\n        alert.error(\"Please connect your Metamask Wallet!\");\n      } else if (err.message.includes(\"Exceeds MAX_Supply\")) {\n        alert.error(\"Payment Failed,exeeded max supply!\");\n      } else if (err.message.includes(\"insufficient funds\")) {\n        alert.error(\"Payment Failed,Insufficient funds in your account!\");\n      } else if (err.message.includes(\"not on the White List\")) {\n        alert.error(\"Payment Failed,Your account is not on the Whitelist!\");\n      } else alert.error(\"Payment Failed, please try again!\");\n      //   setShowMintedModal(false);\n    }\n  };\n\n  const InitComponent = () => {\n    return (\n      <>\n        <div className=\"drone-bt-icon\">\n          <img src={drone} alt=\"drone\" />\n        </div>\n        <p className=\"claim\">CLAIM IS LIVE</p>\n        <button onClick={connectWallet} className=\"connect\">\n          CONNECT METAMASK\n        </button>\n      </>\n    );\n  };\n\n  const ClaimComponent = () => {\n    return (\n      <>\n        <div className=\"drone-bt-icon\">\n          <img src={drone} alt=\"drone\" />\n        </div>\n        <p className=\"claim\">{claims} CLAIMS LEFT IN YOUR WALLET</p>\n        <p className=\"\" id=\"address-text\">\n          Connected with {address.slice(0, 5)}...{address.slice(-3)}\n        </p>\n        <p className=\"mint-num\">\n          CLAIM : {num} DRONES{\" \"}\n          <button\n            onClick={() => {\n              if (num < claims) setNum(num + 1);\n            }}\n          >\n            {\" \"}\n            +\n          </button>{\" \"}\n          <button\n            onClick={() => {\n              if (num > 0) {\n                setNum(num - 1);\n              }\n            }}\n          >\n            -{\" \"}\n          </button>\n        </p>\n        <button onClick={mint} className=\"connect\">\n          MINT DRONES\n        </button>\n      </>\n    );\n  };\n\n  const LoadingPopup = () => {\n    return (\n      <div className=\"modal\">\n        <div className=\"overlay\"></div>\n        <div className=\"modal-content\">\n          <img src={loading} alt=\"Loading...\" />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <section className=\"mint-col\">\n      {isloading ? <LoadingPopup /> : null}\n      {mintComplete ? (\n        <>\n          <p className=\"claim\" style={{ color: \"#fff\" }}>\n            YOU HAVE CLAIMED ALL YOUR DRONE\n          </p>\n          <p className=\"claim\" style={{ marginTop: \"25px\" }}>\n            <a\n              target=\"_blank\"\n              href=\"https://opensea.io/collection/afrodroids-by-owo\"\n            >\n              VIEW COLLECTION ON OPENSEA{\" \"}\n            </a>\n          </p>\n        </>\n      ) : status == \"notlive\" ? (\n        Timer()\n      ) : status == \"init\" ? (\n        InitComponent()\n      ) : status == \"connected\" ? (\n        ClaimComponent()\n      ) : null}\n    </section>\n  );\n};\n\nexport default Minting;\n"]},"metadata":{},"sourceType":"module"}