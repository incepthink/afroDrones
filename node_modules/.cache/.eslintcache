[{"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/index.js":"1","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/reportWebVitals.js":"2","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/App.js":"3","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/index.js":"4","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Welcome.jsx":"5","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Minting.jsx":"6","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Navbar.jsx":"7","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Timer.jsx":"8"},{"size":949,"mtime":1643371854236,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1643188204000,"results":"11","hashOfConfig":"10"},{"size":913,"mtime":1643654276083,"results":"12","hashOfConfig":"10"},{"size":135,"mtime":1643194968000,"results":"13","hashOfConfig":"10"},{"size":981,"mtime":1643209152000,"results":"14","hashOfConfig":"10"},{"size":8405,"mtime":1645208279830,"results":"15","hashOfConfig":"10"},{"size":757,"mtime":1643192034000,"results":"16","hashOfConfig":"10"},{"size":1322,"mtime":1643652215512,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"n73aa8",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/index.js",[],["39","40"],"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/reportWebVitals.js",[],"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/App.js",["41","42","43","44"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport bg1 from \"./assests/bg1.png\";\nimport { Minting, Navbar, Welcome } from \"./components\";\n\nconst App = () => {\n  const [mint, setMint] = useState(false);\n\n  const today = new Date();\n\n  useEffect(() => {\n    if (\n      (today.getDate() > 26 && today.getMonth() < 2) ||\n      (today.getDate() < 25 && today.getMonth() > 1)\n    ) {\n      setMint(true);\n    }\n  }, []);\n\n  return (\n    <main>\n      <div className=\"app-container\">\n        {\" \"}\n        <img src={bg1} alt=\"background\" />{\" \"}\n      </div>\n      <div className=\"app-wrapper\">\n        <Navbar />\n\n        {/* {mint ? */}\n        <Minting />\n        {/* <Welcome/> */}\n        {/* } */}\n      </div>\n      <footer>\n        <a target=\"_blank\" href=\"https://twitter.com/OwoAnietie\">\n          By Owo Anietie\n        </a>\n      </footer>\n    </main>\n  );\n};\n\nexport default App;\n",["45","46"],"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/index.js",[],"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Welcome.jsx",["47"],"import React from 'react';\nimport drone from '../assests/001.gif'\n\nconst Welcome = () => {\n  return (\n            <section className='welcome-col'>\n                <div className=\"drone-col\">\n                    <img src={drone} alt=\"drone\" />\n                </div>\n                <div className=\"drone-gist-col\">\n                    <h1>MINTING GOES LIVE 27TH -JAN. 5PM EST</h1>\n                    <button> <a target='_blank' href='https://opensea.io/collection/afrodroids-by-owo'>\n                        VIEW AFRODROIDS ON OPENSEA  </a>\n                        </button>\n                    <p>\n                    Humanity's carelessness, disregard and refusal to nurture \n                    the earth as it had nurtured us, has led to the total annihilation \n                    of mankind. Not a single human was left. Except AfroDroids and Drones\n                    </p>\n                </div>\n            </section>\n            \n        );\n};\n\nexport default Welcome;\n","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Minting.jsx",["48","49","50","51","52","53","54","55","56"],"import React, { useState, useEffect } from 'react';\nimport drone from '../assests/001.gif';\nimport { ethers } from 'ethers';\nimport ABI from '../Blockchain/ABI.json';\nimport { useAlert } from 'react-alert';\nimport loading from '../assests/loading.gif';\nimport Timer from './Timer';\n\nconst nftaddress = '0x5a37bC98D91049fE5fbdE9B7B9edAea719ce877A';\nconst Minting = () => {\n  const alert = useAlert();\n  const [status, setStatus] = useState('init');\n\n  const [mintComplete, setMintComplete] = useState(false);\n  const [address, setaddress] = useState(null);\n  const [isloading, setIsloading] = useState(false);\n  const [num, setNum] = useState(0);\n  const [claims, setClaims] = useState(0);\n\n  const [partyTime, setPartyTime] = useState(true);\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    if (address != null) findClaims();\n  }, [address]);\n\n  useEffect(() => {\n    const target = new Date('02/02/2022 12:00:00 PM UTC');\n    // const target = new Date(\"01/31/2022 06:44:00 PM UTC\");\n\n    const interval = setInterval(() => {\n      const now = new Date();\n      const difference = target.getTime() - now.getTime();\n\n      const d = Math.floor(difference / (1000 * 60 * 60 * 24));\n      setDays(d);\n\n      const h = Math.floor(\n        (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      setHours(h);\n\n      const m = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      setMinutes(m);\n\n      const s = Math.floor((difference % (1000 * 60)) / 1000);\n      setSeconds(s);\n\n      if (d <= 0 && h <= 0 && m <= 0 && s <= 0) {\n        setPartyTime(true);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (window.ethereum) window.ethereum.on('accountsChanged', connectWallet);\n  }, []);\n\n  const connectWallet = async () => {\n    console.log('CONNET WALLET');\n    // window.ethereum.request\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log('No metamask');\n      alert.error('Please use a browser with Metamask');\n      return;\n    }\n    //check chain id\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n    if (chainId !== '0x1') {\n      console.log('Wrogn Chain');\n      alert.error('Please use Etherium Mainnet ');\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum,\n        'any'\n      );\n      // Prompt user for account connections\n      await provider.send('eth_requestAccounts', []);\n      const signer = provider.getSigner();\n\n      let address = await signer.getAddress();\n      console.log('ADDRESS', address);\n      setaddress(address);\n      setStatus('connected');\n    } catch (err) {\n      console.log(err);\n      if (err.message.includes('unknown account')) {\n        alert.error('Please connect your Metamask Wallet!');\n      } else alert.error('Sorry, An Error Occured!');\n      //   setShowMintedModal(false);\n    }\n  };\n\n  const findClaims = async () => {\n    if (address == null) {\n      alert.error('Could not get address from metamas!');\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum,\n        'any'\n      );\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(nftaddress, ABI, signer);\n      const claim = await contract.availableClaims(address);\n      setClaims(claim.toNumber());\n    } catch (err) {\n      console.log('error finding claims', err);\n    }\n  };\n\n  const mint = async () => {\n    if (num == 0) {\n      alert.error('Sorry, cannot mint 0 drones.');\n      return;\n    }\n    // window.ethereum.request\n    if (!window.ethereum || !window.ethereum.isMetaMask) {\n      console.log('No metamask');\n      alert.error('Please use a browser with Metamask');\n      return;\n    }\n    //check chain id\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n    if (chainId !== '0x1') {\n      console.log('Wrogn Chain');\n      alert.error('Please use Etherium Mainnet ');\n      return;\n    }\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // const provider = new ethers.providers.getDefaultProvider(\"inkeby\", {\n    //   infura: \"https://mainnet.infura.io/v3/44c345ec9cac43e3a461dbfffe965e5d\",\n    // });\n    setIsloading(true);\n\n    try {\n      // console.log(await signer.getAddress());\n      const signer = provider.getSigner();\n      // setaddress(await signer.getAddress());\n\n      let contract = new ethers.Contract(nftaddress, ABI, signer);\n      // console.log(contract);\n      // let address = await signer.getAddress();\n      // // console.log(\"ADDRESS\", address);\n      // setaddress(address);\n\n      let transaction = await contract.claimToken(num);\n      await transaction.wait();\n      // console.log(transaction);\n\n      // console.log(monstersarray);\n      setIsloading(false);\n      alert.success('Minted Successfully!');\n      findClaims();\n      setNum(0);\n    } catch (err) {\n      console.log(err);\n      setIsloading(false);\n      if (err.message.includes('unknown account')) {\n        alert.error('Please connect your Metamask Wallet!');\n      } else if (err.message.includes('Exceeds MAX_Supply')) {\n        alert.error('Payment Failed,exeeded max supply!');\n      } else if (err.message.includes('insufficient funds')) {\n        alert.error('Payment Failed,Insufficient funds in your account!');\n      } else if (err.message.includes('not on the White List')) {\n        alert.error('Payment Failed,Your account is not on the Whitelist!');\n      } else alert.error('Payment Failed, please try again!');\n      //   setShowMintedModal(false);\n    }\n  };\n\n  const InitComponent = () => {\n    return (\n      <>\n        <div className='drone-bt-icon'>\n          <img src={drone} alt='drone' />\n        </div>\n        <p className='claim'>CLAIM IS LIVE</p>\n        <button onClick={connectWallet} className='connect'>\n          CONNECT METAMASK\n        </button>\n      </>\n    );\n  };\n\n  const ClaimComponent = () => {\n    return (\n      <>\n        <div className='drone-bt-icon'>\n          <img src={drone} alt='drone' />\n        </div>\n        <p className='claim'>{claims} CLAIMS LEFT IN YOUR WALLET</p>\n        <p className='' id='address-text'>\n          Connected with {address.slice(0, 5)}...{address.slice(-3)}\n        </p>\n        <p className='mint-num'>\n          CLAIM : {num} DRONES{' '}\n          <button\n            onClick={() => {\n              if (num < claims) setNum(num + 1);\n            }}>\n            {' '}\n            +\n          </button>{' '}\n          <button\n            onClick={() => {\n              if (num > 0) {\n                setNum(num - 1);\n              }\n            }}>\n            -{' '}\n          </button>\n        </p>\n        <button\n          // onClick={mint}\n          onClick={() => {\n            alert.error('Mint Disabled');\n          }}\n          style={{ backgroundColor: '#575757', color: '#bfbfbf' }}\n          // disabled='true'\n          className='connect'>\n          MINT DRONES\n        </button>\n      </>\n    );\n  };\n\n  const LoadingPopup = () => {\n    return (\n      <div className='modal'>\n        <div className='overlay'></div>\n        <div className='modal-content'>\n          <img src={loading} alt='Loading...' />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <section className='mint-col'>\n      {isloading ? <LoadingPopup /> : null}\n      {!partyTime ? (\n        <>\n          <p className='timer-title' style={{ color: '#fff' }}>\n            MINT GOES LIVE IN\n          </p>\n          <p className='timer'>\n            {days} : {hours} : {minutes} : {seconds}\n          </p>\n        </>\n      ) : mintComplete ? (\n        <>\n          <p className='claim' style={{ color: '#fff' }}>\n            YOU HAVE CLAIMED ALL YOUR DRONE\n          </p>\n          <p className='claim' style={{ marginTop: '25px' }}>\n            <a\n              target='_blank'\n              href='https://opensea.io/collection/afrodroids-by-owo'>\n              VIEW COLLECTION ON OPENSEA{' '}\n            </a>\n          </p>\n        </>\n      ) : status == 'init' ? (\n        InitComponent()\n      ) : status == 'connected' ? (\n        ClaimComponent()\n      ) : null}\n    </section>\n  );\n};\n\nexport default Minting;\n","/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Navbar.jsx",[],"/Users/alan/Projects/incepthink/afrodronesV1.0.1/src/components/Timer.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":27,"nodeType":"63","messageId":"64","endLine":4,"endColumn":34},{"ruleId":"61","severity":1,"message":"65","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":18,"column":6,"nodeType":"68","endLine":18,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":35,"column":9,"nodeType":"72","messageId":"73","endLine":35,"endColumn":66,"fix":"74"},{"ruleId":"57","replacedBy":"75"},{"ruleId":"59","replacedBy":"76"},{"ruleId":"70","severity":1,"message":"71","line":12,"column":30,"nodeType":"72","messageId":"73","endLine":12,"endColumn":104,"fix":"77"},{"ruleId":"61","severity":1,"message":"78","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":13},{"ruleId":"61","severity":1,"message":"79","line":14,"column":24,"nodeType":"63","messageId":"64","endLine":14,"endColumn":39},{"ruleId":"66","severity":1,"message":"80","line":28,"column":6,"nodeType":"68","endLine":28,"endColumn":15,"suggestions":"81"},{"ruleId":"66","severity":1,"message":"82","line":62,"column":6,"nodeType":"68","endLine":62,"endColumn":8,"suggestions":"83"},{"ruleId":"61","severity":1,"message":"65","line":120,"column":9,"nodeType":"63","messageId":"64","endLine":120,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":121,"column":13,"nodeType":"86","messageId":"87","endLine":121,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":265,"column":13,"nodeType":"72","messageId":"73","endLine":267,"endColumn":70,"fix":"88"},{"ruleId":"84","severity":1,"message":"85","line":272,"column":18,"nodeType":"86","messageId":"87","endLine":272,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":274,"column":18,"nodeType":"86","messageId":"87","endLine":274,"endColumn":20},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'mint' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'today'. Either include it or remove the dependency array.","ArrayExpression",["91"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"92","text":"93"},["89"],["90"],{"range":"94","text":"93"},"'Timer' is defined but never used.","'setMintComplete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'findClaims'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'connectWallet'. Either include it or remove the dependency array.",["96"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"97","text":"93"},"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},[816,816]," rel=\"noreferrer\"",[484,484],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},[8133,8133],"Update the dependencies array to be: [today]",{"range":"104","text":"105"},"Update the dependencies array to be: [address, findClaims]",{"range":"106","text":"107"},"Update the dependencies array to be: [connectWallet]",{"range":"108","text":"109"},[438,440],"[today]",[977,986],"[address, findClaims]",[1907,1909],"[connectWallet]"]